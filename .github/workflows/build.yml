name: Calance generic CI-CD
on:
  workflow_call:
    outputs:
      version:
        description: "Version"
        value: ${{ jobs.build-docker.outputs.version }}
      cluster_environment:
        description: "Cluster Environment"
        value: ${{ jobs.build-docker.outputs.cluster_environment }}
    secrets:
      GHCR_TOKEN:
        required: true
        description: "secret for GHRC"
      REPOSITORY_OWNER:
        required: true
        description: "username of repository owner"
    inputs:
      docker_context_path:
        description: "Enter docker context path:"
        required: false
        type: string
        default: "."
      dockerfile_path:
        description: "Enter dockerfile path:"
        required: false
        type: string
        default: "./Dockerfile"
      image_name:
        description: "Enter image name:"
        required: false
        type: string
        default: "${{ github.repository }}"

  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.version.outputs.build_version }}
      cluster_environment: ${{ steps.cluster_environment.outputs.cluster_environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ secrets.REPOSITORY_OWNER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ghcr.io/${{ inputs.image_name }}
          tags: |
            type=semver,pattern={{version}}

      - name: Setting application version
        id: version
        run: |
          echo "::set-output name=build_version::${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}"
          echo "${{ steps.meta.outputs.tags }}"
      - name: Identifying cluster in which application should be deployed
        id: cluster_environment
        run: |
          if [[ "${{fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version']}}" =~ .*-rc[0-9] ]]; then
            echo '::set-output name=cluster_environment::testing'
          else
            echo '::set-output name=cluster_environment::production'
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.docker_context_path }}
          file: ${{ inputs.dockerfile_path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}  
          labels: ${{ steps.meta.outputs.labels }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        if: runner.os != 'Windows'
